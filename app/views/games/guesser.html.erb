<img id="canvasimg" style="position:absolute;top:10%;left:52%;" style="display:none;">

<input type="button" value="save" id="btn" size="30" onclick="save()" >
    <script type="text/javascript">

    var canvas, ctx, flag = false,
        prevX = 0,
        currX = 0,
        prevY = 0,
        currY = 0,
        dot_flag = false;

    var color = "black",
        thickness = 2;
    
    function init() {
        canvas = document.getElementById('can');
        ctx = canvas.getContext("2d");
        w = canvas.width;
        h = canvas.height;
    
        canvas.addEventListener("mousemove", function (e) {
            findxy('move', e)
        }, false);
        canvas.addEventListener("mousedown", function (e) {
            findxy('down', e)
        }, false);
        canvas.addEventListener("mouseup", function (e) {
            findxy('up', e)
        }, false);
        canvas.addEventListener("mouseout", function (e) {
            findxy('out', e)
        }, false);
    }
    
    function setcolor(obj) {
        switch (obj.id) {
            case "green":
                color = "green";
                break;
            case "blue":
                color = "blue";
                break;
            case "red":
                color = "red";
                break;
            case "yellow":
                color = "yellow";
                break;
            case "orange":
                color = "orange";
                break;
            case "black":
                color = "black";
                break;
            case "white":
                color = "white";
                break;
        }
    }

    function setthickness(obj) {
        switch (obj.id) {
            case "2":
                thickness = 2;
                break;
            case "5":
                thickness = 5;
                break;
            case "10":
                thickness = 10;
                break;
            case "20":
                thickness = 20;
                break;
        }
    }
    
    function draw() {
        ctx.beginPath();
        ctx.moveTo(prevX, prevY);
        ctx.lineTo(currX, currY);
        ctx.strokeStyle = color;
        ctx.lineWidth = thickness;
        ctx.stroke();
        ctx.closePath();
    }
    
    function erase() {
        var m = confirm("Want to clear");
        if (m) {
            ctx.clearRect(0, 0, w, h);
            document.getElementById("canvasimg").style.display = "none";
        }
    }
    
    function save() {
        document.getElementById("canvasimg").style.border = "2px solid";
        $.ajax({
			  type: "POST",
			  url: "/user/get_op_url",
			  dataType:"json",
			  data: {u:gon.user },
			  success:function(data) {
			    document.getElementById("canvasimg").src = data.responseText;
       			document.getElementById("canvasimg").style.display = "inline";
			    return false;
			  },
			  error:function(data) {
			    document.getElementById("canvasimg").src = data.responseText;
       			document.getElementById("canvasimg").style.display = "inline";
			    return false;
			  }
		});


    }
    
    function findxy(res, e) {
        if (res == 'down') {
            prevX = currX;
            prevY = currY;
            currX = e.clientX - canvas.offsetLeft;
            currY = e.clientY - canvas.offsetTop;
    
            flag = true;
            dot_flag = true;
            if (dot_flag) {
                ctx.beginPath();
                ctx.fillStyle = color;
                ctx.fillRect(currX, currY, 2, 2);
                ctx.closePath();
                dot_flag = false;
            }
        }
        if (res == 'up' || res == "out") {
            flag = false;
        }
        if (res == 'move') {
            if (flag) {
                prevX = currX;
                prevY = currY;
                currX = e.clientX - canvas.offsetLeft;
                currY = e.clientY - canvas.offsetTop;
                draw();


            }
        }
    }

 setInterval(function(){ save(); }, 500);


    </script>